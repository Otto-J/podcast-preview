WEBVTT

1
00:00:04.000 --> 00:00:08.300
OK,行,我们刚才也聊了蛮久

2
00:00:08.300 --> 00:00:10.500
这也差不多有一个小时

3
00:00:10.500 --> 00:00:14.500
我们和志泽从志泽开始熟悉了解技术

4
00:00:14.500 --> 00:00:16.800
然后参与到vue生态中

5
00:00:16.800 --> 00:00:19.300
比如从element plus去使用

6
00:00:19.300 --> 00:00:21.700
去贡献,去维护

7
00:00:21.700 --> 00:00:24.400
那我们也渐渐的有一些技术的产出

8
00:00:24.400 --> 00:00:27.600
也被vue官方认可和吸纳

9
00:00:27.600 --> 00:00:31.100
现在也作为最年轻的vue官方成员

10
00:00:31.100 --> 00:00:34.600
现在他的一些经历也分配在一些

11
00:00:34.600 --> 00:00:37.600
他自己刚才提到的marco插件的一些维护

12
00:00:37.600 --> 00:00:40.100
还有一些刚才提到的其他一些项目

13
00:00:40.100 --> 00:00:42.600
后半程度我们也和志泽聊聊

14
00:00:42.600 --> 00:00:46.100
志泽过去之前是怎么来入门学习前段的

15
00:00:46.100 --> 00:00:49.600
前段学习的过程中有哪些经验和采访经历

16
00:00:49.600 --> 00:00:54.100
那也作为一个开源贡献的资深贡献者

17
00:00:54.100 --> 00:00:59.100
也谈了开源并不是仅仅的去提要开源

18
00:00:59.100 --> 00:01:04.100
也有更多的角度和维度去参与到开源这件事业中去

19
00:01:04.100 --> 00:01:08.100
也提到我们最近月底的时候也有一些

20
00:01:08.100 --> 00:01:09.600
我都不想提这个

21
00:01:09.600 --> 00:01:12.100
我们月底的时候有开源之下的这个活动

22
00:01:12.100 --> 00:01:15.100
咱无论是在要商还是广大的社畜

23
00:01:15.100 --> 00:01:17.600
也可以去关注持续关注这个活动

24
00:01:17.600 --> 00:01:21.600
然后也有些有趣的话题可以一起去讨论

25
00:01:21.600 --> 00:01:26.100
好,我们开始吧

26
00:01:26.100 --> 00:01:27.100
嗨,大家好

27
00:01:27.100 --> 00:01:29.100
新一期的WebWorks播客又来了

28
00:01:29.100 --> 00:01:32.600
WebWorks播客是几个前段程序而闲聊的音频播客节目

29
00:01:32.600 --> 00:01:35.100
节目将围绕程序而领域来闲聊

30
00:01:35.100 --> 00:01:37.100
聊职场,聊资讯,聊技术选型等

31
00:01:37.100 --> 00:01:40.100
只要是和Web开发有关的都可以聊

32
00:01:40.100 --> 00:01:42.100
因为目前主播都是前段程序

33
00:01:42.100 --> 00:01:44.100
所以会以前段视角来切入

34
00:01:44.100 --> 00:01:46.100
你也可以加微信的粉丝群

35
00:01:46.100 --> 00:01:49.100
请加Auto的微信,新兴包宝965,新宝965

36
00:01:49.100 --> 00:01:51.100
我是二话音比较牛逼的新宝头

37
00:01:51.100 --> 00:01:54.100
我是上一词性的刘伟Frank

38
00:01:54.100 --> 00:01:57.100
我是小白菜

39
00:01:57.100 --> 00:01:59.100
咱新一期节目又来了

40
00:01:59.100 --> 00:02:01.100
这次我们邀请到了一个重磅的嘉宾

41
00:02:01.100 --> 00:02:07.100
然后这个嘉宾最近也有一些突出的贡献

42
00:02:07.100 --> 00:02:10.100
然后我们邀请到了三孝志子来打个招呼吧

43
00:02:10.100 --> 00:02:12.100
Hello,大家好

44
00:02:12.100 --> 00:02:14.100
我是三孝志子Kevin

45
00:02:14.100 --> 00:02:16.100
然后现在是大三一名学生

46
00:02:16.100 --> 00:02:21.100
目前也在维护VHL VIT相关的生态

47
00:02:21.100 --> 00:02:23.100
是VHL核心成员

48
00:02:23.100 --> 00:02:28.100
然后也是VHL ALC的团队成员

49
00:02:28.100 --> 00:02:31.100
刚才提到了很多有意思的词

50
00:02:31.100 --> 00:02:34.100
也是咱前段熟悉也有不太熟悉的词汇

51
00:02:34.100 --> 00:02:36.100
咱可以慢慢展开来聊

52
00:02:36.100 --> 00:02:41.100
之前开始了解认识到三孝志子

53
00:02:41.100 --> 00:02:43.100
我们后面就谈志子

54
00:02:43.100 --> 00:02:46.100
认识到志子也是之前

55
00:02:46.100 --> 00:02:48.100
应该是前两年吧

56
00:02:48.100 --> 00:02:51.100
当时Wayle 3刚发布没多久

57
00:02:51.100 --> 00:02:56.100
然后Elimb Plus率先支持Wayle 3作为组件库

58
00:02:56.100 --> 00:02:59.100
当时公司就选用Elimb Plus

59
00:02:59.100 --> 00:03:03.100
做了当时业务的主力模板库

60
00:03:03.100 --> 00:03:05.100
然后在那个时候

61
00:03:05.100 --> 00:03:08.100
Elimb Plus也在快速成长快速迭代

62
00:03:08.100 --> 00:03:10.100
也属于了几个PR

63
00:03:10.100 --> 00:03:13.100
然后在里面就慢慢的见识到志子

64
00:03:13.100 --> 00:03:17.100
然后志子后面也维护了共享了不少的成长

65
00:03:17.100 --> 00:03:19.100
也维护了共享了不少的代码

66
00:03:19.100 --> 00:03:21.100
应该也是一切梦的开始吧

67
00:03:21.100 --> 00:03:23.100
对

68
00:03:23.100 --> 00:03:30.100
因为Elimb Plus算是我第一个正式参与开源的一个社区

69
00:03:30.100 --> 00:03:35.100
就是通过Elimb Plus教给我了非常多的一些

70
00:03:35.100 --> 00:03:37.100
像你要怎么提一个PR

71
00:03:37.100 --> 00:03:40.100
你提一个PR需要做的一些事情

72
00:03:40.100 --> 00:03:44.100
以及一些各种需要注意的细节吧

73
00:03:44.100 --> 00:03:47.100
就是从参与这个场合学到的

74
00:03:47.100 --> 00:03:49.100
对

75
00:03:49.100 --> 00:03:53.100
当时也是说Elimb Plus也是始终在快速迭代

76
00:03:53.100 --> 00:03:58.100
然后我们一边在处理问题一边在增强功能

77
00:03:58.100 --> 00:04:02.100
然后感觉你也是慢慢的见证到了

78
00:04:02.100 --> 00:04:05.100
就是不断的去优化和处理

79
00:04:05.100 --> 00:04:08.100
我记得印象最深的是当初想自立那个组件

80
00:04:08.100 --> 00:04:12.100
然后慢慢才有了后面给Wayle提供增强功能

81
00:04:12.100 --> 00:04:14.100
相关的那些插件的东西

82
00:04:14.100 --> 00:04:16.100
对

83
00:04:16.100 --> 00:04:21.100
因为那个时候我其实维护Elimb Plus花了非常多的时间

84
00:04:21.100 --> 00:04:25.100
因为那个时候是去年吧

85
00:04:25.100 --> 00:04:28.100
还在大二还是大一的时候

86
00:04:28.100 --> 00:04:31.100
基本上就是下了课然后没什么事就

87
00:04:31.100 --> 00:04:36.100
然后就开始维护做这种事情了

88
00:04:36.100 --> 00:04:39.100
你现在大几?还在上大学是吗?

89
00:04:39.100 --> 00:04:42.100
对现在是大三

90
00:04:42.100 --> 00:04:45.100
真年轻

91
00:04:45.100 --> 00:04:50.100
相当于你在大一的时候就开始接触到Wayle 3

92
00:04:50.100 --> 00:04:52.100
然后开始参与到开源里边了

93
00:04:52.100 --> 00:04:58.100
是的因为我其实个人接触编程也蛮早的

94
00:04:58.100 --> 00:05:02.100
可能小学开始就接触编程了

95
00:05:02.100 --> 00:05:06.100
接触开源应该是在2020年

96
00:05:06.100 --> 00:05:11.100
也就是我高中大一对大一的时候

97
00:05:11.100 --> 00:05:14.100
这么早

98
00:05:14.100 --> 00:05:17.100
年纪轻轻的程序员

99
00:05:17.100 --> 00:05:21.100
可能也是我那个接触的时间早

100
00:05:21.100 --> 00:05:26.100
然后导致就目前可能就相对年轻一点

101
00:05:26.100 --> 00:05:28.100
这个一会我们可以再慢慢聊

102
00:05:28.100 --> 00:05:31.100
估计也能聊出来很多有趣的话题

103
00:05:31.100 --> 00:05:35.100
之前也是说我们在ELEM PLUS

104
00:05:35.100 --> 00:05:41.100
然后从开始使用到提供线到后面核心维护

105
00:05:41.100 --> 00:05:45.100
然后现在这个ELEM PLUS精力投入怎么样

106
00:05:45.100 --> 00:05:48.100
现在迭代的状态怎么样

107
00:05:48.100 --> 00:05:49.100
能给介绍介绍

108
00:05:49.100 --> 00:05:54.100
目前我可能是没太在维护ELEM PLUS了

109
00:05:54.100 --> 00:05:59.100
然后因为我是有在维护View

110
00:05:59.100 --> 00:06:04.100
还有一些自己的一些东西可能相对来说更底层一点

111
00:06:04.100 --> 00:06:08.100
可能就是目前的ELEM PLUS状态

112
00:06:08.100 --> 00:06:09.100
我不是太了解

113
00:06:09.100 --> 00:06:12.100
但是应该还是不错的

114
00:06:12.100 --> 00:06:14.100
也是

115
00:06:14.100 --> 00:06:18.100
你原来不也是ELEM PLUS的贡献者吗

116
00:06:18.100 --> 00:06:20.100
我短暂的混进去了

117
00:06:20.100 --> 00:06:21.100
之前比较活跃

118
00:06:21.100 --> 00:06:24.100
当时公司也核心在用ELEM PLUS

119
00:06:24.100 --> 00:06:29.100
然后简单的一些东西也贴了几个水了几个PR

120
00:06:29.100 --> 00:06:30.100
当时比较活跃

121
00:06:30.100 --> 00:06:37.100
我其实一开始怎么加入ELEM PLUS也是有点和你差不多

122
00:06:37.100 --> 00:06:39.100
我是自己在写一个项目

123
00:06:39.100 --> 00:06:41.100
然后那时候是用View2

124
00:06:41.100 --> 00:06:43.100
View2是用ELEM UI

125
00:06:43.100 --> 00:06:46.100
然后ELEM UI迁到View3

126
00:06:46.100 --> 00:06:48.100
如果你图方便的话

127
00:06:48.100 --> 00:06:52.100
就迁移到ELEM PLUS是稍微方便一点的

128
00:06:52.100 --> 00:06:55.100
因为大部分的API都是一样的

129
00:06:55.100 --> 00:06:58.100
然后就迁移到ELEM PLUS

130
00:06:58.100 --> 00:07:00.100
我发现了它有一些Bug

131
00:07:00.100 --> 00:07:04.100
就一步一步的就入坑了

132
00:07:04.100 --> 00:07:09.100
对 这也是一个非常有趣的经历

133
00:07:09.100 --> 00:07:14.100
刚才也谈你在维护ELEM PLUS中也萌生了很多想法

134
00:07:14.100 --> 00:07:17.100
然后好多想法也持续你现在也持续在更

135
00:07:17.100 --> 00:07:18.100
有哪些问题

136
00:07:18.100 --> 00:07:21.100
当时有哪些问题你后来是怎么做的

137
00:07:21.100 --> 00:07:22.100
怎么解决

138
00:07:22.100 --> 00:07:26.100
对 我目前在维护View的一些问题

139
00:07:26.100 --> 00:07:30.100
其实是在维护ELEM PLUS才发现的

140
00:07:30.100 --> 00:07:32.100
因为之前是作为一个框架的

141
00:07:32.100 --> 00:07:34.100
只是一个比较初级的

142
00:07:34.100 --> 00:07:37.100
或者说是叫做一个比较上层的使用者

143
00:07:37.100 --> 00:07:39.100
就是写一些APP之类的

144
00:07:39.100 --> 00:07:45.100
其实有些问题你很难通过写一个正常的APP去发现

145
00:07:45.100 --> 00:07:48.100
但是在维护一个框架

146
00:07:48.100 --> 00:07:51.100
尤其是这种比较大的UI框架的时候

147
00:07:51.100 --> 00:07:58.100
其实是可以更深刻的认识到View的一些相对底层的问题

148
00:07:58.100 --> 00:08:04.100
所以现在在维护ViewCore的这种时候就可以去

149
00:08:04.100 --> 00:08:07.100
算是一个契机吧

150
00:08:07.100 --> 00:08:10.100
然后去解决了一些问题

151
00:08:10.100 --> 00:08:13.100
比如说最开始写了一个插件

152
00:08:13.100 --> 00:08:17.100
也就是View3.3现在的一个DefineOptions

153
00:08:17.100 --> 00:08:19.100
这么一个红的一个插件

154
00:08:19.100 --> 00:08:23.100
那时候是在维护ELEM PLUS的时候

155
00:08:23.100 --> 00:08:26.100
要设置一个组件的名字

156
00:08:26.100 --> 00:08:30.100
因为要知道作为一个组件库来说

157
00:08:30.100 --> 00:08:35.100
它的名字可能不应该由它的文件名来决定

158
00:08:35.100 --> 00:08:40.100
需要来一个比如说ELEM PLUS就用EL为前缀

159
00:08:40.100 --> 00:08:42.100
需要加上这么一个前缀

160
00:08:42.100 --> 00:08:49.100
但是给所有的文件名加EL这个前缀好像又显得没有这个必要

161
00:08:49.100 --> 00:08:51.100
所以就写了这么一个插件

162
00:08:51.100 --> 00:08:53.100
然后来做到这个事情

163
00:08:53.100 --> 00:08:59.100
对这也是谈到Setup出来之后遇到的这些小问题

164
00:08:59.100 --> 00:09:02.100
后面你是怎么来考虑的

165
00:09:02.100 --> 00:09:07.100
后面我觉得这个插件用做出来用的也还不错

166
00:09:07.100 --> 00:09:10.100
所以就思考了一下

167
00:09:10.100 --> 00:09:12.100
要不还是发RFC吧

168
00:09:12.100 --> 00:09:16.100
RFC就是一个公开的意见征求稿

169
00:09:16.100 --> 00:09:18.100
就是问问社区

170
00:09:18.100 --> 00:09:22.100
大家来看一看这个红你们觉得OK

171
00:09:22.100 --> 00:09:25.100
或者说你们有什么更好的意见

172
00:09:25.100 --> 00:09:27.100
也可以提一提

173
00:09:27.100 --> 00:09:31.100
然后确实也是通过RFC收集到了蛮多有用的建议的

174
00:09:31.100 --> 00:09:35.100
然后也就是根据意见进行了一些修改

175
00:09:35.100 --> 00:09:42.100
然后也非常荣幸这次在View3.3中被正式的

176
00:09:42.100 --> 00:09:46.100
加入到了View的核心中

177
00:09:46.100 --> 00:09:50.100
对从3.2到3.3

178
00:09:50.100 --> 00:09:57.100
就是咱录播客这会前两天5月10号左右吧

179
00:09:57.100 --> 00:09:59.100
然后正好View3.3发布了

180
00:09:59.100 --> 00:10:06.100
所以从当初View3.2到现在3.3相当于一个主要版本更新之后

181
00:10:06.100 --> 00:10:08.100
这里边有些功能

182
00:10:08.100 --> 00:10:13.100
然后我们去看View3官方文档提到View3有哪些功能更新的时候

183
00:10:13.100 --> 00:10:18.100
也会见到有很多来自质子提供的这些功能

184
00:10:18.100 --> 00:10:20.100
那我们也就谈到3.3了

185
00:10:20.100 --> 00:10:24.100
3.3有哪些有意思的功能能介绍介绍吗

186
00:10:24.100 --> 00:10:28.100
哪些是你来贡献的或者你比较熟悉的

187
00:10:28.100 --> 00:10:34.100
其实View3.3有大概五六个feature

188
00:10:34.100 --> 00:10:43.100
就是功能都是我去做或者说是出自我写的一个叫做ViewMacros这么一个插件

189
00:10:43.100 --> 00:10:49.100
因为我之前在做了View的Define Options之后

190
00:10:49.100 --> 00:10:53.100
我觉得我都既然开了这个头了

191
00:10:53.100 --> 00:10:56.100
那我不然要不然我就再多做一点事情吧

192
00:10:56.100 --> 00:10:59.100
就是我觉得View我想要有的

193
00:10:59.100 --> 00:11:04.100
但是View官方可能因为一些比如说试验性质的

194
00:11:04.100 --> 00:11:06.100
就不好直接加上了一些功能

195
00:11:06.100 --> 00:11:08.100
或者说作为一个探索

196
00:11:08.100 --> 00:11:12.100
我就写了这么一个库来探索

197
00:11:12.100 --> 00:11:15.100
我觉得可以尝试吧

198
00:11:15.100 --> 00:11:19.100
就有点其实有点像Babel对不对

199
00:11:19.100 --> 00:11:23.100
就有一些像TC39还没有发布的一些

200
00:11:23.100 --> 00:11:29.100
还没有正式化的一些stage3 stage2的一些语法

201
00:11:29.100 --> 00:11:34.100
我们可以尝试在用Babel来给他转换成旧的语法

202
00:11:34.100 --> 00:11:37.100
ViewMacro其实也是这么一个功能

203
00:11:37.100 --> 00:11:43.100
就是我有的时候的一些天马行空的一些提案吧

204
00:11:43.100 --> 00:11:45.100
我就会坐在上面

205
00:11:45.100 --> 00:11:51.100
然后View3.3这次就采用了ViewMacros

206
00:11:51.100 --> 00:11:56.100
里面大概四到五个五到六个提案吧

207
00:11:56.100 --> 00:12:02.100
大概我觉得最有意思的或者说面向用户来说

208
00:12:02.100 --> 00:12:08.100
最有用的可能还是Define Model这个语法堂

209
00:12:08.100 --> 00:12:16.100
就是在以前你可能需要如果写一个双向仿电的probs

210
00:12:16.100 --> 00:12:22.100
就是参数的话你得写一个Define ProbeDefine Emits

211
00:12:22.100 --> 00:12:27.100
然后再调用这个emit函数来改变

212
00:12:27.100 --> 00:12:33.100
你需要改变去触发一个改变一个新的值

213
00:12:33.100 --> 00:12:36.100
然后使用了Define Model之后

214
00:12:36.100 --> 00:12:40.100
你就可以像一个简单的ref一样

215
00:12:40.100 --> 00:12:42.100
然后直接就去改它的值

216
00:12:42.100 --> 00:12:47.100
我们会在底层帮你去调用这个emit函数

217
00:12:47.100 --> 00:12:52.100
相当于是一个封装的一个语法堂吧

218
00:12:52.100 --> 00:12:55.100
对这是一个非常直观非常有趣的一个功能

219
00:12:55.100 --> 00:13:00.100
然后估计对广大使用一些前端的用户来说

220
00:13:00.100 --> 00:13:07.100
也是能够直接受益比较明显的语法堂

221
00:13:07.100 --> 00:13:09.100
然后比较有趣的是

222
00:13:09.100 --> 00:13:12.100
我基本上之前有在B站做直播

223
00:13:12.100 --> 00:13:16.100
然后碰巧就是在那段时间在做

224
00:13:16.100 --> 00:13:19.100
就是像Define SlotDefine Model

225
00:13:19.100 --> 00:13:22.100
还有Define Options

226
00:13:22.100 --> 00:13:27.100
这几个功能都在B站录下来了

227
00:13:27.100 --> 00:13:30.100
然后又上传到B站

228
00:13:30.100 --> 00:13:32.100
这是一个比较有趣的点

229
00:13:32.100 --> 00:13:37.100
就是如果对一些底层代码感兴趣

230
00:13:37.100 --> 00:13:44.100
也可以看看就是怎么去从从头开始去做这种功能

231
00:13:44.100 --> 00:13:46.100
这是一个非常好的方式

232
00:13:46.100 --> 00:13:49.100
就是我们想作为使用者的话

233
00:13:49.100 --> 00:13:53.100
可以直接看我们的刚才提到这些功能文章中

234
00:13:53.100 --> 00:13:54.100
直接说如何来使用

235
00:13:54.100 --> 00:13:57.100
如果想聊背后的前因后果

236
00:13:57.100 --> 00:13:59.100
包括如何来一步一步实现

237
00:13:59.100 --> 00:14:01.100
你提供了之前的直播录播

238
00:14:01.100 --> 00:14:03.100
然后也可以去观察

239
00:14:03.100 --> 00:14:07.100
去和你一块去探索里边的背后的一些细节

240
00:14:07.100 --> 00:14:10.100
对这可能是一个比较有趣的点

241
00:14:10.100 --> 00:14:12.100
还有其他的吗

242
00:14:12.100 --> 00:14:14.100
比如Send3其他的功能

243
00:14:14.100 --> 00:14:21.100
View3.3其他功能的话可能就是之前提到Define Options

244
00:14:21.100 --> 00:14:26.100
然后这次又有一个叫做Define Slot的功能

245
00:14:26.100 --> 00:14:28.100
对这也是一个功能区的

246
00:14:28.100 --> 00:14:34.100
对在配合上View3.3这次就是支持了TypeScript范形

247
00:14:34.100 --> 00:14:37.100
就是你在使用一些类型严格的时候

248
00:14:37.100 --> 00:14:43.100
可以配合类型类型的范型以及Define Slot来做一些

249
00:14:43.100 --> 00:14:46.100
之前我们在Element Plus非常难以做到

250
00:14:46.100 --> 00:14:48.100
或者说就压根做不到的一些事情

251
00:14:48.100 --> 00:14:52.100
比如说你在使用一个表格的时候

252
00:14:52.100 --> 00:14:55.100
表格的话它有不同的一个列对不对

253
00:14:55.100 --> 00:15:01.100
然后列的数据的类型其实以前就是一个Annie

254
00:15:01.100 --> 00:15:05.100
就是你不知道你没有办法实现类型安全的写法

255
00:15:05.100 --> 00:15:07.100
这样的话就可以去做到了

256
00:15:07.100 --> 00:15:12.100
对这也是我刚才提到Define Slot的时候

257
00:15:12.100 --> 00:15:15.100
也是相当于一个痛点或者一个不能算痛点

258
00:15:15.100 --> 00:15:19.100
也算一个能体验比较好的一个明显的增强

259
00:15:19.100 --> 00:15:22.100
之前的时候类型是推断不出来的

260
00:15:22.100 --> 00:15:28.100
对然后我觉得就View3.3这次最大的一个改善

261
00:15:28.100 --> 00:15:34.100
就是针对于我们叫做DX也就是Developer Experience

262
00:15:34.100 --> 00:15:37.100
中文名叫做开发者体验

263
00:15:37.100 --> 00:15:42.100
就是解决了一些你在写代码Coding的时候

264
00:15:42.100 --> 00:15:46.100
觉得这个东西太难用了的这么一个吐槽吧

265
00:15:46.100 --> 00:15:52.100
对因为我日常在写View3

266
00:15:52.100 --> 00:15:55.100
所以刚才提到的很多点也一直疯狂的点头

267
00:15:55.100 --> 00:15:58.100
包括我们刚才说的Define Option

268
00:15:58.100 --> 00:16:00.100
我们可以自定义当前组件的名字

269
00:16:00.100 --> 00:16:03.100
我们去使用DVTor去Debug的时候

270
00:16:03.100 --> 00:16:05.100
不再是全都是index了

271
00:16:05.100 --> 00:16:09.100
我们刚才也提去双向绑定Vigamodel的时候

272
00:16:09.100 --> 00:16:10.100
我们现在写的代码会比较多

273
00:16:10.100 --> 00:16:13.100
要先接一下然后再去定义一下如何触发

274
00:16:13.100 --> 00:16:16.100
最后再去真正执行去触发

275
00:16:16.100 --> 00:16:19.100
我们在写一些弹窗的时候会比较麻烦

276
00:16:19.100 --> 00:16:22.100
有了质子提供的Define Model的话

277
00:16:22.100 --> 00:16:24.100
写起来会更容易更直观

278
00:16:24.100 --> 00:16:28.100
之前的时候可能会写的代码行数会更多

279
00:16:28.100 --> 00:16:30.100
更麻烦比较繁琐

280
00:16:30.100 --> 00:16:33.100
我们刚才也提到了一些Define Slots

281
00:16:33.100 --> 00:16:35.100
之前深度写View3的话

282
00:16:35.100 --> 00:16:38.100
也会意识到我们在写一些插槽的时候

283
00:16:38.100 --> 00:16:40.100
这个类型是无法推断出来的

284
00:16:40.100 --> 00:16:46.100
在使用做一些TS强交验的时候

285
00:16:46.100 --> 00:16:48.100
可能会有一些问题

286
00:16:48.100 --> 00:16:50.100
我们现在有了这个方式之后

287
00:16:50.100 --> 00:16:52.100
能够显著的去改善这一点

288
00:16:52.100 --> 00:16:55.100
也契合了刚才质子说的

289
00:16:55.100 --> 00:16:58.100
我们去提升开发者体验

290
00:16:58.100 --> 00:17:03.100
刚才其实也提到了导入外部的类型

291
00:17:03.100 --> 00:17:05.100
导入叫啥呀

292
00:17:05.100 --> 00:17:10.100
导入外部TS类型也是显著的一个增强

293
00:17:10.100 --> 00:17:12.100
对

294
00:17:12.100 --> 00:17:15.100
我看到还有一个

295
00:17:15.100 --> 00:17:18.100
还有一个JSX

296
00:17:18.100 --> 00:17:21.100
就是View3.3里边

297
00:17:21.100 --> 00:17:26.100
View3.3那个JSX也是一个

298
00:17:26.100 --> 00:17:29.100
但是那个好像没有正式的落地

299
00:17:29.100 --> 00:17:31.100
会在View3.4中落地

300
00:17:31.100 --> 00:17:33.100
哦这样的

301
00:17:33.100 --> 00:17:35.100
是的

302
00:17:35.100 --> 00:17:38.100
刚才提到引入第三方TS

303
00:17:38.100 --> 00:17:41.100
这也是3.2中的一个小痛点

304
00:17:41.100 --> 00:17:43.100
之前3.2刚出来的时候

305
00:17:43.100 --> 00:17:46.100
在公司内部去推的时候就意识到

306
00:17:46.100 --> 00:17:49.100
我们在3.2中引入一个第三方的

307
00:17:49.100 --> 00:17:50.100
不能说第三方

308
00:17:50.100 --> 00:17:52.100
就引入其他文件的TS类型的时候

309
00:17:52.100 --> 00:17:54.100
现在不能直接去使用

310
00:17:54.100 --> 00:17:57.100
尤其是我们在想共享一些

311
00:17:57.100 --> 00:17:59.100
想接受一些purpose类型的时候

312
00:17:59.100 --> 00:18:00.100
会比较麻烦

313
00:18:00.100 --> 00:18:02.100
需要现在我们做法是

314
00:18:02.100 --> 00:18:04.100
就重复去定义

315
00:18:04.100 --> 00:18:07.100
后来也看到质子去尝试去改善这一点

316
00:18:07.100 --> 00:18:09.100
目前是问题解决了是吗

317
00:18:09.100 --> 00:18:11.100
是百分之百解决

318
00:18:11.100 --> 00:18:13.100
目前的话是问题只是被改善了

319
00:18:13.100 --> 00:18:17.100
因为我在ViewMapros第三方插件的时候

320
00:18:17.100 --> 00:18:20.100
其实已经做了一个feature叫做Better Define

321
00:18:20.100 --> 00:18:23.100
就是我写了一个

322
00:18:23.100 --> 00:18:27.100
比较简单的TS的分析器吧

323
00:18:27.100 --> 00:18:30.100
就是它会去比如说你在

324
00:18:30.100 --> 00:18:33.100
如果这个类型在别的文件

325
00:18:33.100 --> 00:18:35.100
我们去帮你追踪一下

326
00:18:35.100 --> 00:18:38.100
去计算出你的类型

327
00:18:38.100 --> 00:18:40.100
到底是一个什么东西

328
00:18:40.100 --> 00:18:43.100
但是其实因为考虑到TypeScript

329
00:18:43.100 --> 00:18:47.100
你可以去做一些像什么类型体操

330
00:18:47.100 --> 00:18:51.100
这个东西是没办法通过简单的

331
00:18:51.100 --> 00:18:53.100
你别说1000行1万行

332
00:18:53.100 --> 00:18:56.100
未必都能未必把它做出来

333
00:18:56.100 --> 00:19:01.100
所以最保险方法还是说你要套一个比较大

334
00:19:01.100 --> 00:19:03.100
比较庞大的TS的编译器

335
00:19:03.100 --> 00:19:07.100
但是其实我个人是不太愿意去做这种事情的

336
00:19:07.100 --> 00:19:11.100
因为TS的编译器会比较慢

337
00:19:11.100 --> 00:19:13.100
然后也比较庞大

338
00:19:13.100 --> 00:19:18.100
所以可能我最近在探索的一件事情就是

339
00:19:18.100 --> 00:19:20.100
不是去解决它

340
00:19:20.100 --> 00:19:24.100
然后我可能会在ViewMapros

341
00:19:24.100 --> 00:19:27.100
去想办法规避它

342
00:19:27.100 --> 00:19:33.100
这算是一个解决的思路吧

343
00:19:33.100 --> 00:19:37.100
然后之前也是在直播的时候

344
00:19:37.100 --> 00:19:40.100
突然就是灵光乍现吧

345
00:19:40.100 --> 00:19:46.100
对 这也是一个非常奇妙的缘分

346
00:19:46.100 --> 00:19:49.100
因为当初我们公司也算

347
00:19:49.100 --> 00:19:52.100
当初从3.0 3.1用到3.2的时候

348
00:19:52.100 --> 00:19:55.100
意识到这个TS类型引入的问题之后

349
00:19:55.100 --> 00:19:59.100
当初也是内部讨论出来不知道怎么做

350
00:19:59.100 --> 00:20:02.100
然后后续在那个GitHub未有官方

351
00:20:02.100 --> 00:20:03.100
我提了个A署

352
00:20:03.100 --> 00:20:08.100
然后当初应该是我记得是21年提的

353
00:20:08.100 --> 00:20:14.100
那时候提了之后立刻被游雨昔给回复了

354
00:20:14.100 --> 00:20:15.100
他说目前是不支持

355
00:20:15.100 --> 00:20:16.100
后续打算支持

356
00:20:16.100 --> 00:20:19.100
时间一晃两年过去了

357
00:20:19.100 --> 00:20:22.100
现在我看这个A署已经被close了

358
00:20:22.100 --> 00:20:25.100
我一看评论数已经还蛮长的

359
00:20:25.100 --> 00:20:29.100
我看你也是对这个A署有印象吧

360
00:20:29.100 --> 00:20:32.100
我看后面你也提交了很多最初的讨论

361
00:20:32.100 --> 00:20:34.100
和一些想法的落地

362
00:20:34.100 --> 00:20:35.100
对 是的

363
00:20:35.100 --> 00:20:38.100
这条A署应该是View3.2以来的

364
00:20:38.100 --> 00:20:42.100
就是评论人数以及参与人数最高的一条A署

365
00:20:42.100 --> 00:20:47.100
对 其实这个A署其实也值得一读

366
00:20:47.100 --> 00:20:50.100
然后从上往下我们也从顺序时间走

367
00:20:50.100 --> 00:20:51.100
所以最早不支持

368
00:20:51.100 --> 00:20:53.100
只是简单的说不支持

369
00:20:53.100 --> 00:20:57.100
后续有很多人使用了各种黑魔法

370
00:20:57.100 --> 00:21:00.100
各种绕过的方式来去让

371
00:21:00.100 --> 00:21:04.100
在3.2使用这个引入的时候更舒服一点

372
00:21:04.100 --> 00:21:06.100
然后有很多人献计献策

373
00:21:06.100 --> 00:21:08.100
这个过程也是蛮有意思的

374
00:21:08.100 --> 00:21:11.100
后面我看你也在参与到评论

375
00:21:11.100 --> 00:21:13.100
和在持续交流和互动的时候

376
00:21:13.100 --> 00:21:16.100
应该想必也就是吸收了很多观点

377
00:21:16.100 --> 00:21:20.100
然后也有一些来自真实用户的一些反馈

378
00:21:20.100 --> 00:21:25.100
嗯 对的 就是一开始的社区是也有一个插件

379
00:21:25.100 --> 00:21:30.100
然后那个插件是可以一部分的缓解这个问题

380
00:21:30.100 --> 00:21:35.100
但是其实因为那个插件做的相对来说简单一些

381
00:21:35.100 --> 00:21:38.100
并不能就是还是有很多的case

382
00:21:38.100 --> 00:21:40.100
它是覆盖不到的

383
00:21:40.100 --> 00:21:46.100
所以有了我这么一个自己写的一个插件

384
00:21:46.100 --> 00:21:52.100
哎 行 这样相当于咱把3.3的一些

385
00:21:52.100 --> 00:21:55.100
有趣的对开发者关心的一些点

386
00:21:55.100 --> 00:22:00.100
我们点了点然后也展开稍微展开做了一下小讨论

387
00:22:00.100 --> 00:22:03.100
然后因为我目前写5.3比较多

388
00:22:03.100 --> 00:22:05.100
所以很多点能够是直接

389
00:22:05.100 --> 00:22:10.100
直接让我能感受到哪些地方是真正改善了

390
00:22:10.100 --> 00:22:13.100
顺利的话说不定我下周就可以在公司内部

391
00:22:13.100 --> 00:22:17.100
我们去讲一讲5.3对我们现有的这些项目

392
00:22:17.100 --> 00:22:20.100
有哪些明显的改进

393
00:22:20.100 --> 00:22:24.100
刘威小白菜你们现在用的多吗 有感触吗

394
00:22:24.100 --> 00:22:28.100
5.3呀 5.3我上次用还是21年的

395
00:22:28.100 --> 00:22:35.100
我现在我才发现我21年给安特迪没有提到那个意思

396
00:22:35.100 --> 00:22:39.100
他现在都没解决掉

397
00:22:39.100 --> 00:22:41.100
小白菜用的多

398
00:22:41.100 --> 00:22:45.100
没有3的话我这个怎么说我其实

399
00:22:45.100 --> 00:22:50.100
严格上来说我现在是正式用过的算两个版本

400
00:22:50.100 --> 00:22:53.100
一个是当时RX的最后一个版本

401
00:22:53.100 --> 00:22:58.100
因为我们当时是一个V3项目

402
00:22:58.100 --> 00:23:00.100
还有一个VR的老项目

403
00:23:00.100 --> 00:23:05.100
然后我们因为业务原因不得不把他们合并为一份代码

404
00:23:05.100 --> 00:23:08.100
然后考虑到写法当时的更新过程

405
00:23:08.100 --> 00:23:14.100
我们就当时把VR的更新到了就是VR的最新版本

406
00:23:14.100 --> 00:23:16.100
就是让大家可以支持setup

407
00:23:16.100 --> 00:23:21.100
然后这个算是我们第一算是第一次用V3的相关语法

408
00:23:21.100 --> 00:23:24.100
然后另一个应该就是V3.0.0

409
00:23:24.100 --> 00:23:30.100
然后没有用上TS这个还是比较可惜

410
00:23:30.100 --> 00:23:36.100
但是从使用上来说我个人觉得V3比VR的开发体验好很多

411
00:23:36.100 --> 00:23:40.100
就特别是那个逻辑复用这一块

412
00:23:40.100 --> 00:23:45.100
以前特别是像那种管理后台类型的项目的话

413
00:23:45.100 --> 00:23:50.100
逻辑复用部分很多时候你需要靠混合红line处理

414
00:23:50.100 --> 00:23:55.100
现在的话可以直接用自定义UXR

415
00:23:55.100 --> 00:23:58.100
然后可以自己把这部分逻辑封装好

416
00:23:58.100 --> 00:24:08.100
然后现在的话我们在开新的项目目前是在用3.2然后加TS

417
00:24:08.100 --> 00:24:12.100
然后算是第一次用完整版的V3吧

418
00:24:12.100 --> 00:24:15.100
就是V3.2加TS加那个Wit

419
00:24:15.100 --> 00:24:19.100
反正我觉得开发体验比以前用vipad爽太多了

420
00:24:19.100 --> 00:24:26.100
而且不是刚好Wit也更新到了好像4.2还是4.3

421
00:24:26.100 --> 00:24:29.100
当时那个版本还更快了很多

422
00:24:29.100 --> 00:24:32.100
所以用起来我觉得还是挺爽的

423
00:24:32.100 --> 00:24:38.100
你这个使用场景就非常的典型

424
00:24:38.100 --> 00:24:42.100
从2迁到3然后3用3.0的版本

425
00:24:42.100 --> 00:24:45.100
后续我们使用3.2加TS

426
00:24:45.100 --> 00:24:49.100
你说逻辑复用我和刘威有话要说

427
00:24:49.100 --> 00:24:54.100
我们当初写v3我们整出来了好多种

428
00:24:54.100 --> 00:24:59.100
你别说我想起叉架的项目来了

429
00:24:59.100 --> 00:25:02.100
一个项目里边三种写法class component

430
00:25:02.100 --> 00:25:07.100
还有setup还有option

431
00:25:07.100 --> 00:25:12.100
因为那个项目最早是用option写的

432
00:25:12.100 --> 00:25:17.100
后来我们坚持要在v2里边使用TS

433
00:25:17.100 --> 00:25:22.100
那时候用decorator装置器是比较好的方案

434
00:25:22.100 --> 00:25:24.100
我们两种方式都有

435
00:25:24.100 --> 00:25:27.100
当时应该还在functional的时候

436
00:25:27.100 --> 00:25:29.100
我们就开始实验性的去用了

437
00:25:29.100 --> 00:25:31.100
后来赶上3.0

438
00:25:31.100 --> 00:25:35.100
所以我们那个项目新员工看了之后都懵逼了

439
00:25:35.100 --> 00:25:36.100
什么写法都有

440
00:25:36.100 --> 00:25:42.100
当时optional还是比较早的时候就尝试去用

441
00:25:42.100 --> 00:25:46.100
太杂交了

442
00:25:46.100 --> 00:25:52.100
我觉得你们能把装置器和option混在一起用是比较牛的

443
00:25:52.100 --> 00:25:56.100
当时写装置器写的可害吧

444
00:25:56.100 --> 00:26:02.100
当时那个装置器应该算是很先进的写法

445
00:26:02.100 --> 00:26:05.100
在v3出来那个setup出来之前

446
00:26:05.100 --> 00:26:08.100
它不被官方认可吗

447
00:26:08.100 --> 00:26:10.100
对那不是第三方库吗

448
00:26:10.100 --> 00:26:13.100
用一个叫什么wheel-director

449
00:26:13.100 --> 00:26:19.100
对这个也是当初对TS没有更好的支持

450
00:26:19.100 --> 00:26:24.100
而且这个decorator对大碰影前端或场景来说

451
00:26:24.100 --> 00:26:26.100
有额外的学习成本

452
00:26:26.100 --> 00:26:29.100
所以当时虽然我们公司当时咱公司在用

453
00:26:29.100 --> 00:26:31.100
咱的前公司在用

454
00:26:31.100 --> 00:26:37.100
但是实际上应该社区里边提到decorator这种写法的方式不多

455
00:26:37.100 --> 00:26:42.100
也赶上这两年咱前端的这种书写的范式确实发生转变了

456
00:26:42.100 --> 00:26:45.100
从互合到我们现在这个component API

457
00:26:45.100 --> 00:26:49.100
变化思路还是转得比较快

458
00:26:49.100 --> 00:26:55.100
目前的话decorate官方的库已经被deprecated了

459
00:26:55.100 --> 00:26:59.100
可惜了我的记忆

460
00:26:59.100 --> 00:27:04.100
回头再问问他们是不是现在还用着当时写的代码

461
00:27:04.100 --> 00:27:08.100
当然第三方的还是可以用

462
00:27:08.100 --> 00:27:11.100
我记得当时大家在讨论

463
00:27:11.100 --> 00:27:16.100
支屋上有个帖子就是由尤大亲自下场回的

464
00:27:16.100 --> 00:27:21.100
大家本来是聊那个话题是问wheel为什么TS

465
00:27:21.100 --> 00:27:23.100
为什么用了这么多any

466
00:27:23.100 --> 00:27:25.100
然后当时尤大就回

467
00:27:25.100 --> 00:27:31.100
应该是v3初期的时候代码里好像还有很多any被人在支屋上主查

468
00:27:31.100 --> 00:27:33.100
然后尤大回了一句

469
00:27:33.100 --> 00:27:39.100
当时确实去网上你去跟别人争论的时候wheel的确实ts支持不好

470
00:27:39.100 --> 00:27:45.100
但是到v2版本的时候我个人感觉他的ts支持已经很完备了

471
00:27:45.100 --> 00:27:56.100
基本上除了template还有propper和emitter都支持了

472
00:27:56.100 --> 00:28:01.100
然后当时的体验基本上我觉得和ts差没有特别大的差异

473
00:28:01.100 --> 00:28:05.100
wheel一开始是用flow的

474
00:28:05.100 --> 00:28:09.100
后来有个大佬一个人提到的事情办法代码

475
00:28:09.100 --> 00:28:11.100
当时一个巨大的pr

476
00:28:11.100 --> 00:28:17.100
wheel2.6及其以前的话一直是用的flow

477
00:28:17.100 --> 00:28:24.100
然后后面是2.7就是我们有一个成员把它改成了typescript

478
00:28:24.100 --> 00:28:28.100
你写的这个插件可以在2.7上去使用吗

479
00:28:28.100 --> 00:28:30.100
包括咱3.3提到这些功能

480
00:28:30.100 --> 00:28:38.100
对是可以的wheelmicros现在就是2.7的话是不会去移植3.3的feature了

481
00:28:38.100 --> 00:28:41.100
但是可以通过这个插件来实现

482
00:28:41.100 --> 00:28:48.100
这也是咱听众有需要的再维护一些老项目的话

483
00:28:48.100 --> 00:28:50.100
听到这里也可以去熟悉做一个了解

484
00:28:50.100 --> 00:28:53.100
但是我们也会提供收notes然后放对应的链接

485
00:28:53.100 --> 00:28:58.100
这样我们相当于咱先聊了一阵

486
00:28:58.100 --> 00:29:04.100
质子在wheel中做的一些贡献和咱3.3有哪些新特性可以落地

487
00:29:04.100 --> 00:29:09.100
我感觉聊下来质子做的marco这一系列的插件

488
00:29:09.100 --> 00:29:14.100
更像落地版的官方的前驱的实验性

489
00:29:14.100 --> 00:29:15.100
怎么说ifz

490
00:29:15.100 --> 00:29:17.100
是有点像

491
00:29:17.100 --> 00:29:21.100
因为我可能更能定义有点像官方的一个试验田

492
00:29:21.100 --> 00:29:24.100
咱们可以把一些

493
00:29:24.100 --> 00:29:28.100
哪怕它再离谱

494
00:29:28.100 --> 00:29:34.100
我觉得只要是有实验价值的都可以往这方面上面来试试

495
00:29:34.100 --> 00:29:38.100
对我感觉这对你说的很好

496
00:29:38.100 --> 00:29:42.100
感觉这个也像咱的早期也不能是早期

497
00:29:42.100 --> 00:29:45.100
就之前去争论function落地的时候

498
00:29:45.100 --> 00:29:48.100
也是感觉官方直接去做这个东西

499
00:29:48.100 --> 00:29:50.100
不一定非常好

500
00:29:50.100 --> 00:29:52.100
或者说反弹意见会更大

501
00:29:52.100 --> 00:29:56.100
由社区由个人去推出这样的这个插件去

502
00:29:56.100 --> 00:30:01.100
快速落地咱之前提到ifz可能也是一个非常好的一个途径

503
00:30:01.100 --> 00:30:04.100
对我就是我个人是觉得

504
00:30:04.100 --> 00:30:08.100
vimacro就是去弥补这一方面的不足

505
00:30:08.100 --> 00:30:13.100
nightly版本

506
00:30:13.100 --> 00:30:17.100
那提到刚才我们也刚才提到这个marco

507
00:30:17.100 --> 00:30:18.100
marco里边有很多插件

508
00:30:18.100 --> 00:30:22.100
现在有哪些功能是vim还没有吸收的

509
00:30:22.100 --> 00:30:26.100
然后也比较有意思能能能点一点介绍介绍吗

510
00:30:26.100 --> 00:30:30.100
总共的话应该是有蛮多的

511
00:30:30.100 --> 00:30:33.100
但是就是目前我们核心团队

512
00:30:33.100 --> 00:30:38.100
还有一些社区比较反馈的比较好的一个

513
00:30:38.100 --> 00:30:42.100
我觉得就是一个叫做definprop

514
00:30:42.100 --> 00:30:47.100
就他没有那个sdefinprop的一个红

515
00:30:47.100 --> 00:30:52.100
你用官方的话你只能一次性的用

516
00:30:52.100 --> 00:30:57.100
调用definprop然后去传给他一个对象

517
00:30:57.100 --> 00:31:01.100
然后一次性的声明好所有的参数

518
00:31:01.100 --> 00:31:06.100
然后用没有s的版本你可以一次一次调用

519
00:31:06.100 --> 00:31:09.100
你需要用新增一个参数

520
00:31:09.100 --> 00:31:11.100
你就去调用definprop

521
00:31:11.100 --> 00:31:16.100
然后去指定一下他的那个prop的一个名字

522
00:31:16.100 --> 00:31:19.100
这样的话我们就可以这个红

523
00:31:19.100 --> 00:31:21.100
就会给你返回一个ref

524
00:31:21.100 --> 00:31:25.100
就是他是一个正常的一个ref值

525
00:31:25.100 --> 00:31:28.100
就没有那么多所谓的魔法

526
00:31:28.100 --> 00:31:33.100
然后用起来的话可能会比较符合直觉一点

527
00:31:33.100 --> 00:31:34.100
嗯

528
00:31:37.100 --> 00:31:41.100
那感觉我们聊下来其实也在一定程度上消极了

529
00:31:41.100 --> 00:31:45.100
我们最初对propos去如何去修改

530
00:31:45.100 --> 00:31:50.100
原来提倡说不要直接去修改propos的值

531
00:31:50.100 --> 00:31:56.100
我们之前在web2里边使用2.5之后

532
00:31:56.100 --> 00:31:59.100
使用wego model sync s1nc

533
00:31:59.100 --> 00:32:02.100
然后慢慢去增强v3去慢慢去支持

534
00:32:02.100 --> 00:32:04.100
到现在我们使用definprop的话

535
00:32:04.100 --> 00:32:08.100
可以直接去修改传出来的propos

536
00:32:08.100 --> 00:32:11.100
是不是一定程度上淡化了弱化了这些

537
00:32:11.100 --> 00:32:14.100
之前说的这个不要直接去修改这个说法

538
00:32:14.100 --> 00:32:16.100
对是有

539
00:32:16.100 --> 00:32:22.100
因为这个说法是说你不要直接去修改propos这个object

540
00:32:22.100 --> 00:32:23.100
就这个对象里面的值

541
00:32:23.100 --> 00:32:25.100
这是会有问题的

542
00:32:25.100 --> 00:32:28.100
但是其实我们现在是封装了一个函数

543
00:32:28.100 --> 00:32:32.100
就是帮你去做了一些比较麻烦的事情

544
00:32:32.100 --> 00:32:36.100
然后你就看上去这个表面上给用户提供了一个API

545
00:32:36.100 --> 00:32:38.100
就是你可以直接去修改它

546
00:32:38.100 --> 00:32:40.100
但你要知道就是底层

547
00:32:40.100 --> 00:32:44.100
它实际上还是老原来的那一套东西

548
00:32:44.100 --> 00:32:47.100
就是你也可以不用这个语法堂

549
00:32:47.100 --> 00:32:52.100
照样使用之前的代码式也是可以正常的执行的

550
00:32:52.100 --> 00:32:56.100
对这也一定程度上咱解答了之前

551
00:32:56.100 --> 00:32:58.100
有人提出来这些困惑

552
00:32:58.100 --> 00:33:02.100
刚才也提到了这mark中有些更委屈

553
00:33:02.100 --> 00:33:06.100
更委屈没有还没有在web官方落地的一些特性

554
00:33:06.100 --> 00:33:11.100
感兴趣小伙伴也可以在我们看到收note里边去点

555
00:33:11.100 --> 00:33:13.100
看到更多一些技术细节

556
00:33:13.100 --> 00:33:17.100
我们确实之前使用了在那个我们一些小项目

557
00:33:17.100 --> 00:33:20.100
使用了那个你提供的这个mark插件

558
00:33:20.100 --> 00:33:22.100
当初在web3.2里边去用

559
00:33:22.100 --> 00:33:27.100
还有就是以及之前的reactivity transform

560
00:33:27.100 --> 00:33:31.100
然后已经被官方给deprecated了就是废弃掉了

561
00:33:31.100 --> 00:33:35.100
官方的话可能会在下个版本也就是也就是3.4中

562
00:33:35.100 --> 00:33:37.100
正式的将它删除掉

563
00:33:37.100 --> 00:33:39.100
就是你就没办法用了

564
00:33:39.100 --> 00:33:45.100
但是现在是我把功能移植到了vue macros里面

565
00:33:45.100 --> 00:33:50.100
意味着你可以不用急着去把这个代码重构掉

566
00:33:50.100 --> 00:33:51.100
改成原来的样子

567
00:33:51.100 --> 00:33:55.100
因为我觉得个人觉得reactivity transform的话

568
00:33:55.100 --> 00:33:57.100
还是有它的用武之地的

569
00:33:57.100 --> 00:34:03.100
因为vue macros存在的另一个必要的一个点就是

570
00:34:03.100 --> 00:34:09.100
我个人认为写vue的这么一个风格或者写vue的写法吧

571
00:34:09.100 --> 00:34:13.100
不仅仅只有官方提供了这一种一种写法

572
00:34:13.100 --> 00:34:16.100
就是去拓展出另外一种写法

573
00:34:16.100 --> 00:34:22.100
然后reactivity transform的话就是我觉得是可行的一个写法

574
00:34:22.100 --> 00:34:28.100
就是如果觉得这个写法好的人他依然是可以来用的

575
00:34:28.100 --> 00:34:30.100
然后我也是可以去维护的

576
00:34:30.100 --> 00:34:33.100
然后有什么bug也会去fix的

577
00:34:33.100 --> 00:34:41.100
然后他就相当于是官方把使命放到了vue macros这个库上面

578
00:34:41.100 --> 00:34:44.100
刚才去听你讲的时候

579
00:34:44.100 --> 00:34:49.100
两句话出现在脑海里

580
00:34:49.100 --> 00:34:52.100
优雅降级渐进增强

581
00:34:52.100 --> 00:35:01.100
刚才提到的这个transformer就是我们之前争议性比较大的

582
00:35:01.100 --> 00:35:04.100
就是dollar IF这种写法

583
00:35:04.100 --> 00:35:08.100
如果对这个写法不熟悉搜索

584
00:35:08.100 --> 00:35:13.100
刚才提到dollar IF可能能快速地找到一些之前的讨论和一些实践

585
00:35:13.100 --> 00:35:18.100
刚才志泽也提到3.4后续不会再支持这项共挪

586
00:35:18.100 --> 00:35:22.100
那么可以使用志泽提供的插件来继续去完善

587
00:35:22.100 --> 00:35:25.100
后续估计也会不断地去优化和迭代

588
00:35:25.100 --> 00:35:30.100
然后就让这个dollar IF功能强走得更远

589
00:35:30.100 --> 00:35:32.100
嗯嗯对的

590
00:35:36.100 --> 00:35:49.100
我们刚才其实也是讲从最早开始尝试从上层vue 3的组件库

591
00:35:49.100 --> 00:35:53.100
我们遇到一些问题开始尝试去探索

592
00:35:53.100 --> 00:35:57.100
然后一步步落地和实现反复的讨论

593
00:35:57.100 --> 00:36:03.100
志泽也贡献了一批优秀的插件

594
00:36:03.100 --> 00:36:08.100
然后我们在3.3中也官方给落地接纳吸收了

595
00:36:08.100 --> 00:36:14.100
那现在接纳吸收之后功能和你提供的功能一模一样吗

596
00:36:14.100 --> 00:36:17.100
那你后续这些功能怎么来做支持和维护

597
00:36:17.100 --> 00:36:20.100
不是完全一样的

598
00:36:20.100 --> 00:36:22.100
是有一些细微的差异的

599
00:36:22.100 --> 00:36:27.100
当然这些细微的差异在一般情况下是可以忽略掉的

600
00:36:27.100 --> 00:36:31.100
比较显著的差异是我有写进的文档

601
00:36:31.100 --> 00:36:36.100
然后总体来说vue macros还是会更激进一点

602
00:36:36.100 --> 00:36:39.100
还是会提供更多的功能

603
00:36:39.100 --> 00:36:43.100
然后官方毕竟是给普罗大众用的

604
00:36:43.100 --> 00:36:45.100
所以相对保守一点

605
00:36:45.100 --> 00:36:54.100
有部分的功能目前还是没有办法在官方的这么一个代码里面直接使用的

606
00:36:54.100 --> 00:36:57.100
还是需要插件的

607
00:36:57.100 --> 00:37:03.100
感觉这才是IFC和一些前沿探索性的正确用法

608
00:37:03.100 --> 00:37:06.100
然后质子也做了非常大的贡献

609
00:37:06.100 --> 00:37:12.100
感觉我作为vue的死忠粉丝还是要给你打赏

610
00:37:12.100 --> 00:37:14.100
嗯嗯嗯

611
00:37:14.100 --> 00:37:15.100
嗯 行啊

612
00:37:15.100 --> 00:37:19.100
那我们其实刚才围绕技术我们也聊了蛮多

613
00:37:19.100 --> 00:37:27.100
那质子作为最早的vue3框架的使用者到维护者到贡献者

614
00:37:27.100 --> 00:37:30.100
那也一步步落地一些插件

615
00:37:30.100 --> 00:37:34.100
最终也就被官方吸纳也成了官方的成员

616
00:37:34.100 --> 00:37:37.100
这也是非常有趣的一个经历

617
00:37:37.100 --> 00:37:40.100
一会儿说我们还可以再聊聊背后的一些有趣的故事

618
00:37:40.100 --> 00:37:44.100
我看最近你也在忙一些和怎么理解

619
00:37:44.100 --> 00:37:47.100
web3还是ELK相关的东西

620
00:37:47.100 --> 00:37:49.100
这个是什么东西能给介绍介绍吗

621
00:37:49.100 --> 00:37:56.100
嗯 其实是之前我有段时间就是感觉没什么事做

622
00:37:56.100 --> 00:37:58.100
或者说是没什么项目起

623
00:37:58.100 --> 00:38:07.100
然后就是托尼然后找到我说哎我们在做ELK你要不要来写

624
00:38:07.100 --> 00:38:10.100
我觉得好啊就是我也觉得这个东西蛮酷的

625
00:38:10.100 --> 00:38:19.100
那我就也参与了然后是和Anthony Foo以及Nux团队的Daniel Rowe

626
00:38:19.100 --> 00:38:22.100
以及Vid团队的Petak

627
00:38:22.100 --> 00:38:26.100
然后四个人一起组建了最初的ELK团队

628
00:38:26.100 --> 00:38:30.100
然后那个时间相对来说时间比较多

629
00:38:30.100 --> 00:38:35.100
然后就比较闲就给就就帮那个ELK的话

630
00:38:35.100 --> 00:38:38.100
就做了蛮多的事情写了蛮多的代码的

631
00:38:38.100 --> 00:38:44.100
回到ERK上来那ELK现在是一个什么东西呢

632
00:38:44.100 --> 00:38:46.100
我们可以用它来做什么呢

633
00:38:46.100 --> 00:38:48.100
能给从实用角度讲一讲吗

634
00:38:48.100 --> 00:38:51.100
嗯他现在其实就是

635
00:38:51.100 --> 00:38:58.100
他现在其实是一个Mustang也就是中文名叫做长毛巷的

636
00:38:58.100 --> 00:39:01.100
长毛巷是一个社交平台

637
00:39:01.100 --> 00:39:05.100
然后我们是通过用View啊

638
00:39:05.100 --> 00:39:08.100
然后帮他写了一个前端的客户端

639
00:39:08.100 --> 00:39:15.100
然后然后我们在Mustang的原有的客户端上优化了界面

640
00:39:15.100 --> 00:39:20.100
然后有一些个人觉得更好用的一些功能吧

641
00:39:20.100 --> 00:39:25.100
嗯然后ELK的话一开始

642
00:39:25.100 --> 00:39:29.100
然后ELK的话主要目前还是为了探索一些

643
00:39:29.100 --> 00:39:32.100
像View最前沿的一些技术

644
00:39:32.100 --> 00:39:36.100
比如说像繁星组件其实在View 3.2的时候

645
00:39:36.100 --> 00:39:41.100
我就已经把那个繁星组件用在了ELK身上

646
00:39:41.100 --> 00:39:45.100
然后以及View Macros的一些啊feature

647
00:39:45.100 --> 00:39:52.100
或者说是Nexx以及Vit就是我们熟悉的一些啊feature

648
00:39:52.100 --> 00:39:55.100
我们都可以在上面啊进行尝试的

649
00:39:55.100 --> 00:39:59.100
嗯然后对于ELK本身的话

650
00:39:59.100 --> 00:40:06.100
我们目前维护的活跃度啊近期好像不是特别的高

651
00:40:06.100 --> 00:40:11.100
因为啊像Anthony Foo还有我还有其他两位的话

652
00:40:11.100 --> 00:40:16.100
其实是都有啊自己主力要维护的事情呢

653
00:40:16.100 --> 00:40:21.100
然后也欢迎就是社区如果对ELK啊本身感兴趣的

654
00:40:21.100 --> 00:40:24.100
也可以来啊多参与参与共进的样子

655
00:40:24.100 --> 00:40:28.100
嗯对我我也也在关注的项目

656
00:40:28.100 --> 00:40:33.100
之前应该是封闭开发然后现在是开放原代码对吧

657
00:40:33.100 --> 00:40:34.100
对是的

658
00:40:34.100 --> 00:40:39.100
感觉这个ELK项目我都是读ELK习惯

659
00:40:39.100 --> 00:40:44.100
ELK项目也是一个非常好咱去相当于我们有官方成员

660
00:40:44.100 --> 00:40:48.100
去使用一些未有的一些新技术

661
00:40:48.100 --> 00:40:52.100
我们去真正去尝试把它产品化去把这个创意给落地

662
00:40:52.100 --> 00:40:57.100
那我们也从技术方面能够学到很多未有的一些最佳实践

663
00:40:57.100 --> 00:41:01.100
那有了咱官方成员的一些维护

664
00:41:01.100 --> 00:41:06.100
我们能看到更多生产级别写出来的代码可以去学习和消化

665
00:41:06.100 --> 00:41:12.100
咱挺有种对未有不熟悉或新手的话可以去阅读和理解

666
00:41:12.100 --> 00:41:16.100
那另一方面这个产品本身使用起来也非常有趣

667
00:41:16.100 --> 00:41:18.100
然后这背后里边也有很多细节

668
00:41:18.100 --> 00:41:28.100
那这里边涉及到咱之前现在不也不详细展开的一些web3的一些理念和一些一些基础设施

669
00:41:28.100 --> 00:41:31.100
这个我们就不展开了使用的话可以体验体验

670
00:41:31.100 --> 00:41:41.100
嗯这边再提一嘴就是ELK本身其实是一开始是为了去探索Nux的一些能力

671
00:41:41.100 --> 00:41:46.100
因为Nux在ELK刚做的时候

672
00:41:46.100 --> 00:41:49.100
我不太记得好像才刚刚正式版

673
00:41:49.100 --> 00:41:55.100
然后是Daniel以及Anthony Foo

674
00:41:55.100 --> 00:41:59.100
之前还其实还叫做Nux to Dawn

675
00:41:59.100 --> 00:42:02.100
其实是有包含Nux的名字的

676
00:42:02.100 --> 00:42:11.100
这么一个我们其实是一开始想把它做成一个Nux以及View的一个最佳实践的一个例子给大家看

677
00:42:11.100 --> 00:42:16.100
这里有点复杂的呀这么大的项目

678
00:42:16.100 --> 00:42:18.100
直接搞了个项目出来

679
00:42:18.100 --> 00:42:23.100
对就是因为越做越复杂越做越复杂

680
00:42:23.100 --> 00:42:26.100
所以我们觉得它可以成为一个单独的项目

681
00:42:26.100 --> 00:42:28.100
所以就改名成了ELK

682
00:42:28.100 --> 00:42:34.100
然后也弄的也蛮好的

683
00:42:34.100 --> 00:42:41.100
嗯以后不有这库克布克可以直接引这儿的代码

684
00:42:41.100 --> 00:42:47.100
对那我们刚才提到就是这是从不同的角度去看这都是一个非常好的学习材料

685
00:42:47.100 --> 00:42:52.100
还有目前在做可以再点的吗

686
00:42:52.100 --> 00:42:59.100
目前的话主要还是开源社区在维护View以及我的View Macros Cool

687
00:42:59.100 --> 00:43:02.100
就是有的时候会蹦出一些天马行空的想法

688
00:43:02.100 --> 00:43:06.100
目前目前可以是有一个但是还没做

689
00:43:06.100 --> 00:43:14.100
然后还有就是在维护我现在的公司的一些项目

690
00:43:14.100 --> 00:43:19.100
就是像XLog你们上一期有聊到的DIY

691
00:43:19.100 --> 00:43:25.100
我和他在做一些关于Web3加上View

692
00:43:25.100 --> 00:43:28.100
我更是在做Web3加上View的一些事情

693
00:43:28.100 --> 00:43:31.100
也可以尽情期待一下

694
00:43:31.100 --> 00:43:33.100
我说强强联合

695
00:43:33.100 --> 00:43:39.100
对希望也真忠心的希望制能做出更多有趣的产品

696
00:43:39.100 --> 00:43:44.100
希望在Web3里边的这个观念词会越来越多

697
00:43:44.100 --> 00:43:45.100
现在还是偏少

698
00:43:45.100 --> 00:43:47.100
嗯是的

699
00:43:47.100 --> 00:43:50.100
Web3跟React基本上就是绑定的

700
00:43:50.100 --> 00:43:55.100
对因为我个人是想无论说在什么领域吧

701
00:43:55.100 --> 00:43:59.100
我觉得只要我感兴趣的领域

702
00:43:59.100 --> 00:44:04.100
我都可以就是想就是努力把努力

703
00:44:04.100 --> 00:44:08.100
为View提供一个更好的开发体验

704
00:44:08.100 --> 00:44:12.100
对这也是我们如果咱听有听到这

705
00:44:12.100 --> 00:44:15.100
也是一个很好的机会和动力

706
00:44:15.100 --> 00:44:18.100
我们去真正喜爱这个产品

707
00:44:18.100 --> 00:44:20.100
可以围绕这些周边

708
00:44:20.100 --> 00:44:24.100
或者说我们积极去推动社区一些建设去做一些交流

709
00:44:24.100 --> 00:44:27.100
做一些答疑也是一种很好的方式

710
00:44:27.100 --> 00:44:29.100
那我们自然也引出这个话题

711
00:44:29.100 --> 00:44:32.100
你参与开源这么久

712
00:44:32.100 --> 00:44:36.100
也有很多人对开源不是很感冒或者不熟悉

713
00:44:36.100 --> 00:44:38.100
也感觉参与开源很复杂

714
00:44:38.100 --> 00:44:40.100
你有什么过来人经验吗

715
00:44:40.100 --> 00:44:44.100
怎么踏出就迈入着开源这个领域

716
00:44:44.100 --> 00:44:48.100
其实就是其实怎么说呢

717
00:44:48.100 --> 00:44:50.100
开源这个概念

718
00:44:50.100 --> 00:44:54.100
你狭义的来说就是你把代码抛出来

719
00:44:54.100 --> 00:44:56.100
然后大家能看到你的代码

720
00:44:56.100 --> 00:44:58.100
这个也能叫做开源对不对

721
00:44:58.100 --> 00:45:00.100
但是其实开源

722
00:45:00.100 --> 00:45:04.100
它其实是广义来说是包含了更多的一些东西

723
00:45:04.100 --> 00:45:06.100
社区的讨论也好

724
00:45:06.100 --> 00:45:09.100
大家做一些贡献

725
00:45:09.100 --> 00:45:11.100
你可以看到github

726
00:45:11.100 --> 00:45:13.100
其实它有code

727
00:45:13.100 --> 00:45:14.100
它有issue

728
00:45:14.100 --> 00:45:16.100
它有pro request

729
00:45:16.100 --> 00:45:20.100
广义的开源其实只包括狭义的开源

730
00:45:20.100 --> 00:45:22.100
其实只包括code这一部分

731
00:45:22.100 --> 00:45:24.100
但是你要去做好

732
00:45:24.100 --> 00:45:26.100
像issue像pr这些东西

733
00:45:26.100 --> 00:45:29.100
还是比较难的

734
00:45:29.100 --> 00:45:32.100
我觉得怎么去参与呢

735
00:45:32.100 --> 00:45:34.100
就是你

736
00:45:34.100 --> 00:45:37.100
你得勇敢的去迈出那一步

737
00:45:37.100 --> 00:45:39.100
就是just do it

738
00:45:39.100 --> 00:45:43.100
很多人可能会觉得开源这个东西是不是有点

739
00:45:43.100 --> 00:45:46.100
就可能有些人会觉得自己技术不够

740
00:45:46.100 --> 00:45:48.100
或者说自己怎么样怎么样

741
00:45:48.100 --> 00:45:50.100
但是我觉得

742
00:45:50.100 --> 00:45:52.100
从小事做起吧

743
00:45:52.100 --> 00:45:54.100
就是有一些啊

744
00:45:54.100 --> 00:45:56.100
你觉得有一些bug你可以去修

745
00:45:56.100 --> 00:45:59.100
一些你能触碰得到的

746
00:45:59.100 --> 00:46:02.100
就从你能触碰得到的开始做起

747
00:46:02.100 --> 00:46:04.100
那么

748
00:46:04.100 --> 00:46:07.100
你可以在开源中成长

749
00:46:07.100 --> 00:46:10.100
或者说学习的非常非常之快

750
00:46:10.100 --> 00:46:15.100
其实我之前对于一项view的一些最底层

751
00:46:15.100 --> 00:46:18.100
或者说没有那么底层的功能都不是很了解

752
00:46:18.100 --> 00:46:24.100
也是在通过element plus的维护中学习到的知识

753
00:46:24.100 --> 00:46:27.100
然后社区的大家都会

754
00:46:27.100 --> 00:46:30.100
比较友善的就去

755
00:46:30.100 --> 00:46:33.100
知道你应该怎么怎么去做

756
00:46:33.100 --> 00:46:36.100
或者说提供一些方案

757
00:46:36.100 --> 00:46:42.100
对我相信你的那个迷惑issue大傻

758
00:46:42.100 --> 00:46:49.100
这个的话就是大部分人还是比较nice

759
00:46:49.100 --> 00:46:54.100
但是还是有一些比较不那么愉快的issue

760
00:46:54.100 --> 00:46:56.100
没办法

761
00:46:56.100 --> 00:47:01.100
所以就是参与贡献的说明文档的重要性了

762
00:47:01.100 --> 00:47:05.100
其实对于那些人来说

763
00:47:05.100 --> 00:47:10.100
你就是写的再详细再苦口婆心都没用的

764
00:47:10.100 --> 00:47:13.100
人家压根就不care

765
00:47:13.100 --> 00:47:16.100
因为他更多的是想发泄情绪

766
00:47:16.100 --> 00:47:17.100
是的

767
00:47:17.100 --> 00:47:19.100
刚才志子讲的很对

768
00:47:19.100 --> 00:47:21.100
就是我们很多人提到开源的时候

769
00:47:21.100 --> 00:47:23.100
心生恐惧是因为对

770
00:47:23.100 --> 00:47:26.100
觉得需要立刻去贡献大量高质量的

771
00:47:26.100 --> 00:47:28.100
优秀的无可挑剔的代码

772
00:47:28.100 --> 00:47:30.100
刚才志子也提到了

773
00:47:30.100 --> 00:47:32.100
其实我们去看github个人动态的时候

774
00:47:32.100 --> 00:47:35.100
也会从多个角度多个维度去评判

775
00:47:35.100 --> 00:47:38.100
你在github上的一些贡献和活动

776
00:47:38.100 --> 00:47:40.100
并不仅仅是commis提交

777
00:47:40.100 --> 00:47:42.100
那我们去回复a数

778
00:47:42.100 --> 00:47:43.100
回复审核一些pr

779
00:47:43.100 --> 00:47:46.100
或者说我们去做一些沟通和交流

780
00:47:46.100 --> 00:47:48.100
也依然是属于开源的范围内

781
00:47:48.100 --> 00:47:50.100
所以我们志子刚才讲的很对

782
00:47:50.100 --> 00:47:52.100
就是并不是狭义上的说

783
00:47:52.100 --> 00:47:55.100
写代码把这个代码给它push上去

784
00:47:55.100 --> 00:47:56.100
才称之为开源

785
00:47:56.100 --> 00:47:58.100
我们有不同的角度

786
00:47:58.100 --> 00:48:03.100
我们作为一个爱好者或者一个开源的新手

787
00:48:03.100 --> 00:48:05.100
我们最简单的像我一样

788
00:48:05.100 --> 00:48:08.100
给文档提提一些拼写检查

789
00:48:08.100 --> 00:48:10.100
或者把文档写的不清楚

790
00:48:10.100 --> 00:48:11.100
给它加几个括号

791
00:48:11.100 --> 00:48:12.100
做一个解释

792
00:48:12.100 --> 00:48:14.100
也是一个非常好的入眉

793
00:48:14.100 --> 00:48:15.100
得到正向的激励之后

794
00:48:15.100 --> 00:48:17.100
我们就可以像志子一样

795
00:48:17.100 --> 00:48:19.100
不断去深入去探索

796
00:48:19.100 --> 00:48:20.100
然后从简单的事情做

797
00:48:20.100 --> 00:48:21.100
慢慢去变复杂

798
00:48:21.100 --> 00:48:23.100
做一些复杂的事情

799
00:48:23.100 --> 00:48:26.100
这也是同样都是做开源

800
00:48:26.100 --> 00:48:30.100
对,是的,因为我其实我一开始也是通过一些比较

801
00:48:30.100 --> 00:48:35.100
非常简单的bug fix以及文档的修复一些错别字开始的

802
00:48:35.100 --> 00:48:42.100
那你现在我们参与到开源这么

803
00:48:42.100 --> 00:48:46.100
你刚才也提了就是参与到现在维护的项目也蛮多

804
00:48:46.100 --> 00:48:49.100
那你典型的一天是怎么度过的

805
00:48:49.100 --> 00:48:51.100
我看你现在还在上学

806
00:48:51.100 --> 00:48:57.100
每天都是怎么来使用你的这些时间和精力的

807
00:48:57.100 --> 00:48:59.100
典型的一天

808
00:48:59.100 --> 00:49:01.100
因为我上大学的话

809
00:49:01.100 --> 00:49:04.100
相对目前来说比较时间还是比较宽裕的

810
00:49:04.100 --> 00:49:07.100
在学校以外的时间

811
00:49:07.100 --> 00:49:10.100
其实我也不太就不太喜欢

812
00:49:10.100 --> 00:49:14.100
跟学校的一些事情做吧

813
00:49:14.100 --> 00:49:20.100
然后在学校就是在空闲的时间的话

814
00:49:20.100 --> 00:49:24.100
就会打开那个github notifications

815
00:49:24.100 --> 00:49:28.100
看一看就是大家有没有提一些pr提一些issue

816
00:49:28.100 --> 00:49:33.100
我可以去啊回复或者说去解决的一些bug

817
00:49:33.100 --> 00:49:37.100
大概其实做完这些以后就已经很多了

818
00:49:37.100 --> 00:49:39.100
就是有的时候还是蛮多的

819
00:49:39.100 --> 00:49:41.100
做完这件事

820
00:49:41.100 --> 00:49:44.100
做完这些事情之后就是时间可能就不是很多了

821
00:49:44.100 --> 00:49:48.100
然后有剩余的时间就是可能自己

822
00:49:48.100 --> 00:49:51.100
自己脑子里会想一些其他的idea

823
00:49:51.100 --> 00:49:54.100
可能会做这些事情

824
00:49:54.100 --> 00:49:59.100
或者是实在没有的时候就去view call的仓库

825
00:49:59.100 --> 00:50:03.100
或者去其他的仓库看一看有什么bug

826
00:50:03.100 --> 00:50:05.100
可以去修一修

827
00:50:05.100 --> 00:50:08.100
或者就也不干什么吧

828
00:50:08.100 --> 00:50:11.100
可能就随群跟群友瞎聊天

829
00:50:11.100 --> 00:50:17.100
然后有的时候也是能聊出一些可以做的事情的

830
00:50:17.100 --> 00:50:19.100
嗯

831
00:50:19.100 --> 00:50:21.100
哎这也对

832
00:50:21.100 --> 00:50:26.100
哎这这顺着你之前也提到说你接触编程蛮早的

833
00:50:26.100 --> 00:50:30.100
之前是怎么怎么接触到it编程这些的

834
00:50:30.100 --> 00:50:32.100
还有印象

835
00:50:32.100 --> 00:50:37.100
嗯其实我那时候应该是多四年级吧

836
00:50:37.100 --> 00:50:40.100
四年级那时候玩一些游戏嘛

837
00:50:40.100 --> 00:50:42.100
玩游戏就哎那时候小时候玩游戏

838
00:50:42.100 --> 00:50:45.100
就可能接触一些修改器啊

839
00:50:45.100 --> 00:50:48.100
啊返回边啊这些东西嘛

840
00:50:48.100 --> 00:50:54.100
然后之前是看顺便就接触到一一门叫做一语言的变成语言

841
00:50:54.100 --> 00:50:57.100
它就其实有点像那个中文未必

842
00:50:57.100 --> 00:51:03.100
啊看到了一篇就是叫做分析扫怎么写扫雷的外挂这么一个教程

843
00:51:03.100 --> 00:51:06.100
然后它是通过那个c来写这个外挂的

844
00:51:06.100 --> 00:51:10.100
但是我那时候其实对英语什么的也不懂啊

845
00:51:10.100 --> 00:51:13.100
然后对啊电脑什么编程什么的也不懂啊

846
00:51:13.100 --> 00:51:20.100
然后就找到一篇用其他人写的用用语言来做这个外挂的一篇教程

847
00:51:20.100 --> 00:51:24.100
然后语言应该是因为它是用那个汉语来编程的

848
00:51:24.100 --> 00:51:28.100
啊四年级就用用汉语还是写的来的一些东西

849
00:51:28.100 --> 00:51:33.100
然后啊就跟着那个教程一步一步的踏上了这个编程之路吧

850
00:51:33.100 --> 00:51:35.100
哈哈哈哈

851
00:51:35.100 --> 00:51:36.100
语言

852
00:51:36.100 --> 00:51:37.100
对

853
00:51:37.100 --> 00:51:45.100
对这这也是咱接触编程或者去去探索

854
00:51:45.100 --> 00:51:49.100
钻研这些奇奇怪怪的东西的一个非常典型的一个一个开始

855
00:51:49.100 --> 00:51:51.100
就是从玩游戏开始

856
00:51:51.100 --> 00:51:53.100
典型是四年级

857
00:51:53.100 --> 00:51:55.100
哈哈哈哈

858
00:51:55.100 --> 00:52:01.100
然后后面吗就是写一些像啊

859
00:52:01.100 --> 00:52:05.100
前后端也有写过前端有写过

860
00:52:05.100 --> 00:52:09.100
就写一些啊博客呀有的没的东西吗

861
00:52:09.100 --> 00:52:11.100
就是自娱自乐一下

862
00:52:11.100 --> 00:52:13.100
啊

863
00:52:13.100 --> 00:52:15.100
出高中吗

864
00:52:15.100 --> 00:52:18.100
应该是我其实是在

865
00:52:18.100 --> 00:52:22.100
2016年吧对应该是2016年还是2015年

866
00:52:22.100 --> 00:52:24.100
接触到的view

867
00:52:24.100 --> 00:52:26.100
然后就

868
00:52:26.100 --> 00:52:30.100
嗯用用用他给自己写了一个博客

869
00:52:30.100 --> 00:52:36.100
按照你现在是大三推算的话16年好像是初中

870
00:52:36.100 --> 00:52:41.100
不对可能是我记错了应该是18年不是16年18年

871
00:52:41.100 --> 00:52:45.100
也是因为咱现在新生代的成绩能够新生代的

872
00:52:45.100 --> 00:52:51.100
年轻人能够接触到更多更更有这种生产级生产力级别的这些东西了

873
00:52:51.100 --> 00:52:56.100
那写起来就很容易见到效果得到的前端正反馈的更多

874
00:52:56.100 --> 00:53:02.100
对尤其是前端就是你写一个button他他他就出现了就是你可以看得到你自己写的东西

875
00:53:02.100 --> 00:53:04.100
还有一个就是

876
00:53:04.100 --> 00:53:08.100
现在确实就是资源也好就是上手

877
00:53:08.100 --> 00:53:13.100
的容易呃难易程度也好就是比以前是好太多了

878
00:53:13.100 --> 00:53:18.100
嗯然后以至于我现在就经常逛逛推特也可以看得到就是

879
00:53:18.100 --> 00:53:25.100
啊比我就可能出高中的孩子也比我当时肯定是厉害多了

880
00:53:25.100 --> 00:53:29.100
少尔边城对现在少尔边城也普及了

881
00:53:29.100 --> 00:53:33.100
哎那咱我们听众中也有很多年轻的成绩

882
00:53:33.100 --> 00:53:36.100
他可能也是和你一样还在上学

883
00:53:36.100 --> 00:53:41.100
然后有的也是工刚工作一到三年然后也在快速成长快速学习的阶段

884
00:53:41.100 --> 00:53:46.100
作为作为过来人你有哪些学习经验可以

885
00:53:46.100 --> 00:53:51.100
可以或者财通经历能够分享吗让他们做一个参考

886
00:53:51.100 --> 00:53:57.100
呃其实这个东西实际上要讲究非常烦

887
00:53:57.100 --> 00:54:01.100
但是我我我我是一个就是以兴趣为导向的

888
00:54:01.100 --> 00:54:05.100
就是我不太会去思考比如说我我要写javascript

889
00:54:05.100 --> 00:54:09.100
我不会去care他说他到底这个语言好还是不好

890
00:54:09.100 --> 00:54:12.100
什么就业前景一些乱七八糟东西我就是

891
00:54:12.100 --> 00:54:14.100
ok我想学那我就学

892
00:54:14.100 --> 00:54:18.100
我我觉得这个东西我学的开心我就去学

893
00:54:18.100 --> 00:54:22.100
然后如果一个东西我觉得没什么用或者说我

894
00:54:22.100 --> 00:54:27.100
暂时用不到ok我就不学呗就是根据自己的兴趣来

895
00:54:27.100 --> 00:54:29.100
然后兴趣是最好的老师

896
00:54:29.100 --> 00:54:38.100
然后就你就会通过兴趣得到了得到比啊就是你你去想那些东西

897
00:54:38.100 --> 00:54:43.100
想比如说你因为因为不是兴趣而去做的一件事情

898
00:54:43.100 --> 00:54:47.100
你会就去呃你就是会得到更大的一个动力吧

899
00:54:47.100 --> 00:54:55.100
嗯对这也是咱呃以往的嘉宾也是反复都去提到这一点

900
00:54:55.100 --> 00:54:58.100
我们可以先兴趣去驱动

901
00:54:58.100 --> 00:55:03.100
那我们做某件事情真的有有兴趣有动力去继续做下去

902
00:55:03.100 --> 00:55:07.100
那就是一个很好的学习学习的方向学习的点

903
00:55:07.100 --> 00:55:11.100
那么只要去持续来做ok

904
00:55:11.100 --> 00:55:19.100
呃那你现在目前在忙什么未来比如半年后一年后你打算要做哪些东西对未来有什么期待吗

905
00:55:19.100 --> 00:55:26.100
嗯就其实像之前说到的我是一个非常就是随心所欲的一个人

906
00:55:26.100 --> 00:55:34.100
所以其实你比如说下呃比如说下半年吧就是下个月的事情我都可能我自己都不知道

907
00:55:34.100 --> 00:55:42.100
有的时候呃比如说在直播或者说在在在胡思乱想的时候

908
00:55:42.100 --> 00:55:48.100
呃能想到一些比较呃好的点子那我可能就当下回就会去做了

909
00:55:48.100 --> 00:55:52.100
就执行的是的

910
00:55:52.100 --> 00:56:05.100
呃然后大概的大概的计划可能是呃把view的呃比如说view3.4啊也或者说以后的版本也会去参与维护

911
00:56:05.100 --> 00:56:11.100
然后像之前提到的在web3的一些啊酷呃

912
00:56:11.100 --> 00:56:19.100
把把他们和view结合起来的这件事也会是我的一个主主要做的一件事情

913
00:56:19.100 --> 00:56:31.100
嗯然后可以可以透露一点就是在呃游达之前也有说过在view以后之后的版本会有一个叫做vaper mode

914
00:56:31.100 --> 00:56:38.100
就是没有没有virtual dom就是没有一个啊虚拟dom结构的这么一个版本

915
00:56:38.100 --> 00:56:46.100
然后可能也会花更大的时间啊投入在这上面探索一些奇奇怪怪的东东西吧

916
00:56:46.100 --> 00:56:56.100
嗯对这个刚才提到这个点到时候可以放一个我放一个链接之前在在那个大会上也提到这一点

917
00:56:56.100 --> 00:57:03.100
嗯我想问个问题就是你有考虑后面就是想像类似于安德富这样

918
00:57:03.100 --> 00:57:08.100
就反正全全职搞开源然后让游达给你发钱的这种工作吗

919
00:57:08.100 --> 00:57:22.100
嗯其实目前已经有点像了就是目前是全职虽然说还上着学然后也是做一些啊开源相关的工作这样子

920
00:57:22.100 --> 00:57:35.100
然然兴起的惺惺我看你之前也去线下参与了virt相关的一些大会啊我应该是未有康复了啊未未未有康复了

921
00:57:35.100 --> 00:57:47.100
对是的之前啊应该是今年二月份然后到那个阿姆斯特丹然后去参加了viu.js阿姆斯特丹的一个会议

922
00:57:47.100 --> 00:57:50.100
你讲了分享了哪些哪些主题啊

923
00:57:50.100 --> 00:58:14.100
啊我不是去演讲的但是就是我是第一次算是第一次去呃出国吧因为之前呃众所周知的原因啊然后就是想着那去年年底的时候就是还没有解封的情况下啊我我看到了viu.js阿姆斯特丹的的会议的一个宣传吧

924
00:58:14.100 --> 00:58:43.100
然后我觉得我还是想去的所以就啊去像游达啊像像我们团队啊team就呃问了没有就是就确定了啊我可以去ok然后去那边感受了一下吧就是其实我还蛮享受就是和就是一群尤其是自从到合的就一起一群啊viu.js啊viu.js团队的成员啊

925
00:58:43.100 --> 00:59:10.100
或者是说其他啊对viu.js非常感兴趣的啊人一起讨论一些啊之前因为是在啊都带都是在网络上认识的就是在github上然后其实面对面的话还是能学到很多东西以及啊之前有有和Ansoning一起他们一起做一些头脑风暴啊然后就可以可以突然就可以迸发出很多个点子出来

926
00:59:10.100 --> 00:59:13.100
这也是我比较啊享受了一个点

927
00:59:13.100 --> 00:59:39.100
嗯对你说的这点对呃线下的大会能够更相比于线上开会会更极大的去增进人人与人之间这种链接之前去参加下辈活动呃嘉宾的观点也是类似这样观点就感觉线下的活动也也现在咱现在呃交流沟通也更更方便了后续说不定国内会有更多这种线下大会能够吸引到更多位的粉丝和朋友

928
00:59:39.100 --> 00:59:44.320
更多位粉丝和成学集合相关的大会?

929
00:59:44.320 --> 00:59:56.600
对,因为去年其实也有vueconf China的会议,但是因为国内的原因的话,还是在线上举办的。

930
00:59:56.600 --> 01:00:13.900
那次我有去参加演讲,但是都是线上,就非常可惜。因为我那时候应该是高中的时候吧,第一次知道vueconf国内的一个线下的一个聚会演讲吧。

931
01:00:13.900 --> 01:00:30.800
那时候就感觉,我特别想去,但是大学三年都没办法去。这次的话,也就是今年2013年这一次,应该也是一个我会去的。

932
01:00:30.800 --> 01:00:47.940
所以现在结束疫情之后,线下的大会也会持续恢复起来,也会有越来越多的线下的会议可以去参与,你也可以去做更多的分享。

933
01:00:47.940 --> 01:00:55.220
嗯,对的。我也想出个国呀。

934
01:00:55.220 --> 01:01:00.920
也看刘威未来说不定有没有合适的remote岗位。

935
01:01:00.920 --> 01:01:05.340
是吗?webwalk的线下会议。

936
01:01:05.340 --> 01:01:14.880
说不定,说不定呢。再给我们时间,说不定真可以搞webwalk线下。

937
01:01:14.880 --> 01:01:18.880
可以啊,可以搞个聚会啊。

938
01:01:18.880 --> 01:01:28.820
未来你还有哪些活动会参与?我看之前在开源面的时候你提到了开源之下,应该现在也在进行中吧,还是在图备中。

939
01:01:28.820 --> 01:01:38.460
然后这个月的话,月底有一场开源之下在杭州的一个线下的会议吧,我也会去参加。

940
01:01:38.460 --> 01:01:45.460
如果感兴趣的也可以来听一听,我可能会做一些开源方面的分享。

941
01:01:45.460 --> 01:01:49.760
开源之下是什么?它面向哪些受众?

942
01:01:49.760 --> 01:02:04.780
开源之下其实是中科院的一个下属机构发起的一项针对于国内外大学生的一个开源的活动。

943
01:02:04.780 --> 01:02:12.820
其实有点像Google也有一个叫什么,GSOC的一个活动吧。

944
01:02:12.820 --> 01:02:25.420
就是如果你是一个大学生,对,如果你是一个大学生,并且对开源感兴趣都可以来啊,报名,然后他们的活动应该是今年也要马上也要开始了。

945
01:02:25.420 --> 01:02:26.420
嗯。

946
01:02:26.420 --> 01:02:35.220
我去年是有在参与Element Plus,作为社区方的一些活动的。

947
01:02:35.220 --> 01:02:36.220
嗯。

948
01:02:36.220 --> 01:02:37.220
嗯。

949
01:02:37.220 --> 01:02:39.220
只有学生能参加。

950
01:02:39.220 --> 01:02:44.220
是的,本科生和研究生都可以。

951
01:02:44.220 --> 01:02:45.220
嗯。

952
01:02:45.220 --> 01:02:59.220
这是一个,对,这个面向也是在校生,然后也是希望能够吸纳更多年轻的力量去快速的熟悉,去了解这个领域。

953
01:02:59.220 --> 01:03:05.220
咱听众中也有很多在校生还在上学的,也可以去关注这一点。

954
01:03:05.220 --> 01:03:18.220
那我们作为社区依然也可以去关注这里边的话题和一些对一些对外公开的信息,我们去,也去再去了解现在的有哪些有趣的话题有趣的观点。

955
01:03:18.220 --> 01:03:22.220
嗯,是的,因为我我本身是大学生。

956
01:03:22.220 --> 01:03:41.220
然后我其实是就是非常想鼓励啊,如果是大家都是学生,其实你无论是大学生也好啊,初中生高中生也好,如果对开源感兴趣的都可以就是嗯,不要不要有那么多顾虑直接来啊,尝尝试就好。

957
01:03:41.220 --> 01:03:52.220
但是但是如果不是大学生啊,可以努努力混到项目方,就是如果你是一个开源社区的负责人的话,也可以来这边报名。

958
01:03:52.220 --> 01:03:53.220
嗯。

959
01:03:53.220 --> 01:03:57.220
怎么说的我好像开源之下的负责人一样。

960
01:03:57.220 --> 01:04:01.220
我刚才想要不要把这玩意提最前面的。

961
01:04:01.220 --> 01:04:28.220
嗯,OK,行啊,我们刚才也聊了蛮久,这也就我们差不多有一个小时,我们和志泽从志泽开始熟悉了解技术,然后到参与到未有生态中,比如从Element Plus去使用去,呃,贡献去维护,那我们也渐渐的有一些技术的产出,也被未有官方认可和吸纳,那现在也作为最年轻的未有官方成员。

962
01:04:28.220 --> 01:04:37.220
现在他的一些经历呢,也分配在一些他自己的,刚才提到Marco的一些插件的一些维护,还有一些刚才提到的其他一些项目。

963
01:04:37.220 --> 01:05:00.220
后半程的我们也和志泽聊聊志泽过去之前是怎么来入门学习前端的,那前端学习的过程中有哪些经验和采访经历,那也作为一个开源贡献的自身贡献者,那也谈了开源并不是仅仅的去提交代码,也有更多的角度和维度去参与到开源这件事情中去。

964
01:05:00.220 --> 01:05:18.220
也提到我们最近月底的时候也有一些,我都不想提这个,我们月底的时候有开源之下的这个活动,咱无论是在校生还是广大的社畜也可以去关注持续关注这个活动,然后也有些有趣的话题可以去一块一起去讨论。

965
01:05:18.220 --> 01:05:24.220
行,那是我是整场聊得非常开心,学到了很多,对在vue3的三中疯狂点头的新保护头。

966
01:05:24.220 --> 01:05:29.220
我是准备新建个vue项目的刘威凡提。

967
01:05:29.220 --> 01:05:32.220
我是准备去给vue tpr的小白菜。

968
01:05:32.220 --> 01:05:37.220
我是正在review vue pr的志子。

969
01:05:37.220 --> 01:05:40.220
OK,行,还是感谢志的参与。

970
01:05:40.220 --> 01:05:41.220
嗯,感谢。

971
01:05:41.220 --> 01:05:45.220
好的,希望在各种开源项目中见到各位。

